install.packages("dysmo")
install.packages("dismo")
install.packages("rgdal")
install.packages("XML")
install.packages("rworldmap")
head(bkcoord)
head(bkcoord)
plot(head(bkcoord))
plot(head(bkcoord))
plot(bkcoord)
head(bkcoord)
head(bkcoord)
head(coords)
plot(coords)
head(coords)
head(coords)
dim(coords)
dim(coords)
head(coords)
plot(coords)
plot(coords)
plot(coords, pch = 20, col = "steelblue")
plot(coords, pch = 20, size 0.4, col = "steelblue")
plot(coords, pch = 20, size=0.4, col = "steelblue")
plot(coords, pch = 20, cex=0.4, col = "steelblue")
dim(maps2)
dim(maps2[0])
dim(maps2[[1]])
maps2[[1]]
maps2[[2]]
maps2[[3]]
maps2[[4]]
maps2[[5]]
maps2[[6]]
maps2[["g1k15"]]
maps2[["g1r15"]]
maps2[["g1s15"]]
maps2[["g1l15"]]
plot(shp_df[["g1l15"]])
maps2[["g1l15"]]
bk2 <- cbind(bk, coords)
bk["lat"] = nur_coord["lat"]
bk["lat"] = nur_coords["lat"]
bk["lon"] = nur_coords["lon"]
max(bk["lat"])
max(bk["min"])
min(bk["lat"])
bk[which.max(bk$lat),]
bk[which.max(bk$lat),"POIName_de"]
bk[which.max(bk$lat), c("POIName_de", "geopoint")]
install.pacakges("geosphere")
install.packages("geosphere")
exp <- bk[1:20]
exp
exp <- bk[1:20,]
dim(exp)
library(geosphere)
mat <- distm(exp[,c('lon','lat')], exp[,c('lon','lat')], fun=distVincentyEllipsoid)
mat
mat[which.max(mat)]
mat[which.min(mat)]
?distm
mat <- distm(bk[,c('lon','lat')], bk[,c('lon','lat')], fun=distVincentyEllipsoid)
mat <- distm(bk[1:1000,c('lon','lat')], bk[1:1000,c('lon','lat')], fun=distVincentyEllipsoid)
mat <- distm(bk[1:1000,c('lon','lat')], bk[1:1000,c('lon','lat')], fun=distVincentyEllipsoid)
mat
mat <- distm(bk[1:30,c('lon','lat')], bk[1:30,c('lon','lat')], fun=distVincentyEllipsoid)
install.packages("tictoc")
tic("some")\ mat <- distm(bk[1:30,c('lon','lat')], bk[1:30,c('lon','lat')], fun=distVincentyEllipsoid)
library(tictoc)
tic("some")\ mat <- distm(bk[1:30,c('lon','lat')], bk[1:30,c('lon','lat')], fun=distVincentyEllipsoid)
tic("some")\
tic("some")+
mat <- distm(bk[1:30,c('lon','lat')], bk[1:30,c('lon','lat')], fun=distVincentyEllipsoid)
tic("some")
mat <- distm(bk[1:30,c('lon','lat')], bk[1:30,c('lon','lat')], fun=distVincentyEllipsoid)
toc()
tic("some")
mat <- distm(bk[1:100,c('lon','lat')], bk[1:100,c('lon','lat')], fun=distVincentyEllipsoid)

toc()
tic("some")
mat <- distm(bk[1:30,c('lon','lat')], bk[1:30,c('lon','lat')], fun=distVincentyEllipsoid)
toc()
tic("some")
mat <- distm(bk[1:100,c('lon','lat')], bk[1:100,c('lon','lat')], fun=distVincentyEllipsoid)

toc()
tic("some")
mat <- distm(bk[1:100,c('lon','lat')], bk[1:100,c('lon','lat')], fun=distVincentyEllipsoid)
toc()
mat <- distm(bk[1:100,c('lon','lat')], bk[1:100,c('lon','lat')], fun=distCosine)
tic("some")
mat <- distm(bk[1:100,c('lon','lat')], bk[1:100,c('lon','lat')], fun=distcosine)
toc()
tic("some")
mat <- distm(bk[1:100,c('lon','lat')], bk[1:100,c('lon','lat')], fun=distCosine)
toc()

tic("some")
mat <- distm(bk[1:10,c('lon','lat')], bk[1:10,c('lon','lat')], fun=distCosine)

toc()

tic("some")
mat <- distm(bk[1:10,c('lon','lat')], bk[1:10,c('lon','lat')], fun=distCosine)
toc()
tic("some")
mat <- distm(bk[1:10,c('lon','lat')], bk[1:10,c('lon','lat')], fun=distHaversine)
toc()
dim(mat)
which.max(mat)
mat[which.max(mat)]
dim(mat)
mat2 = mat[mat==0]
mat2[1:3,1:3]
dim(mat2)
mat2
dim(mat)
mat[1:3,1:3]
colMax(mat)
colMax(as.data.frame(mat))
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(mat)
test = mat[1:10,1:10]
test
colMax(test)
colMax(as.data.frame(test))
test==0
test[test==0]=1000
test
mat2 <- mat[mat==0] = 100000
mat2 <- mat
mat2[mat2==0] = 100000
colMin <- function(data) sapply(data, min, na.rm = TRUE)
colMin(test)
colMin <- function(data) sapply(data, min, na.rm = TRUE)
colMin(test)
test
colMin(as.data.frame(test))
test = mat[1:10,1:10]
test = data.frame(test)
test
colMin(test)
colMin(test[test>0])
colMin(as.data.frame(test[test>0]))
test[test>0]
dim(test[test>0])
length(test[test>0])
colMin(as.data.frame(test[test>0], ncoll=9))
as.data.frame(test[test>0], ncoll=9)
test
test[test==0] <- 100000
test
dim(mat2)
mat2[mat2==0] <- 100000
max(colMin(mat2))
max(colMin(as.data.frame(test)))
mat2[which.min(mat2)]
which.min(mat2)
mat2[69392641]
typeof(mat2)
dim(mat2)
mat2 = as.data.frame(mat2)
test
test = mat[1:10,1:10]
test
test[11]
test[1,2]
max(test[,1])
max(mat[,1])
tic("wow") max(mat[,1]) toc()

max(mat[,1])
toc()
tic("wow")
max(mat[,1])
toc()
0.101*14000
which.max(mat[,1])
dim(test)[0]
dim(test)
dim(test)[1]
sapply(1:3, function(x) x^2)
sapply(1:3, function(x) which.max(test[,x]))
sapply(1:10, function(x) which.max(test[,x]))
sapply(1:10, function(x) which.max(test[,x]) x)
sapply(1:10, function(x) c(which.max(test[,x]), x))
b = sapply(1:10, function(x) c(which.max(test[,x]), x))
b
dim(b)
sapply(1:10, function(x) test[b[1,x], x])
sapply(1:10, function(x) which.max(test[b[1,x], x]))
sapply(1:10, function(x) test[b[1,x], x])
c = sapply(1:10, function(x) test[b[1,x], x])
which.max(c
)
sapply(1:10, function(x) m = which.max(test[,x]) c(m, x, test[m,x]))
col_max(2,test)
col_max(2,test)
sapply(1:10, function(x) col_max(x, test))
bi = sapply(1:10, function(x) col_max(x, test))
get_remotest(bi)
get_remotest(bi)
col_max(100,mat)
get_remotest(test)
get_remotest(mat[1:100,1:100])
get_remotest(mat[1:1000,1:1000])
get_remotest(mat)
bk[6486,"POIName_de"]
bk[4675,"POIName_de"]
test(which.min(test))
test[which.min(test)]
bk[6363,"POIName_de"]
bk[6363,c("POIName_de", "geopoint")]
bk[6366,c("POIName_de", "geopoint")]
bk[6366,]
mat[which.max(mat)]
 mat2[mat2==100000] = NA
 mat2[mat2==100000] <- NA
library(maps)
map.where(database="world", 46.78663643, 10.28415217)
map.where(database="world", 10.28415217, 46.78663643)
library(raster)
shp <- getData(country = "FRA", level = 0)
shp
ch <- getData(country = "Switzerland", level = 0)
ch
dim(ch)
head(ch)
plot(ch)
?getData
ch <- spTransform(ch, CRSobj = "+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
plot(ch)
cs <- c(3.28084, 3.28084)*6000
grdpts <- makegrid(ch, cellsize = cs)
head(grdpts)
spgrd <- SpatialPoints(grdpts, proj4string = CRS(proj4string(shp)))
spgrdWithin <- SpatialPixels(spgrd[ch,])
spgrd <- SpatialPoints(grdpts, proj4string = CRS(proj4string(ch)))
spgrdWithin <- SpatialPixels(spgrd[ch,])
plot(spgrdWithin, add = T)
plot(ch)
plot(spgrdWithin, add = T)
library(maps)
m <- map("usa", plot=FALSE)
map("usa", project="albers", par=c(39, 45))
map.grid(m)
install.packages(mapproj)
install.packages("mapproj")
library(maps)
m <- map("usa", plot=FALSE)
map("usa", project="albers", par=c(39, 45))
map.grid(m)
test = mat[1:10, 1:10]
test
test[test==0] <- NA
test
dmax <- max(apply(test,2,min,na.rm=TRUE))
dmax
get_remotest(test)
get_remotest(test)
mat[mat==0] <- NA
get_remotest(test)
test
test
get_remotest(test)
get_remotest(test)
get_remotest(mat)
mat[1:3,1:3]
mat[mat==0] <- NA
r
ch
ch
plot(ch)
?getData
sample
r <- raster(nrow = 500, ncol = 500)
r
rr <- rasterize(ch, r)
D <- distanceFromPoints(object = rr, xy = sample) 
plot(D)
 ch
ext <- extent(5.956063, 10.49511,45.81706, 47.80848)
r <- raster(ext, nrow = 500, ncol = 500)
rr <- rasterize(ch, r)
D <- distanceFromPoints(object = rr, xy = sample) 
plot(D)
D[which(is.na(rr[]))] <- NA
plot(D)
sample
?spsample
 head(bk)
bsp <- bk[1:10,c("lon", "lat")]
spbsp <- SpatialPoints(bsp)
spbsp
ch
library(tictoc)
library("tictoc")
D
D
D
?distanceFromPoints
max(D)
D.max
which.max(D)
D[which.max(D)]
dim(D)
D
dim(D[1])
dim(D[1,])
D[1,]
D[100,]
D[50,]
rr
dim(rr)
rr[which.max(D)]
which.max(D)
D
D[which.max(D)]
r[which.max(D)]
rr[which.max(D)]
rr
xyFromCell(r,which.max(D))
xyFromCell(rr,which.max(D))
proj4string(ch)
plot(D)
?rasterize
